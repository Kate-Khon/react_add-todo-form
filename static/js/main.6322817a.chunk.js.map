{"version":3,"sources":["components/TodoInfo/TodoInfo.tsx","components/UserInfo/UserInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["TodoInfo","todo","id","title","completed","className","UserInfo","user","TodoList","todoWithUser","map","name","username","email","userId","todos","users","find","sort","todo1","todo2","firstMaxId","App","useState","setTitle","userForTodo","setUserForTodo","setId","isInputEntered","setIsInputEntered","isUserSelected","setIsUserSelected","onSubmit","event","preventDefault","cardWillBeCreated","replace","trim","newCard","Object","assign","state","createACard","type","value","placeholder","onChange","target","disabled","selected","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6322817a.chunk.js","sourcesContent":["import { Todo } from '../../react-app-env';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <div data-id={todo.id}>\n    <p>\n      {todo.id}\n    </p>\n    <p>\n      {todo.title}\n    </p>\n\n    {todo.completed\n      ? (\n        <p className=\"completed\">\n          Completed\n        </p>\n      )\n\n      : (\n        <p className=\"notCompleted\">\n          Not completed\n        </p>\n      )}\n  </div>\n);\n","import { User } from '../../react-app-env';\n\nexport const UserInfo: React.FC<User> = ({ user }) => (\n  <strong>{user}</strong>\n);\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport { Todo } from '../../react-app-env';\n\ntype Props = {\n  todoWithUser: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todoWithUser }) => (\n  <ul className=\"container\">\n    {todoWithUser.map(todo => (\n      <li key={todo.id}>\n        <div className=\"card\">\n          <UserInfo user={todo.user} />\n          <TodoInfo todo={todo} />\n        </div>\n      </li>\n    ))}\n  </ul>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React, { useState } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\nimport './App.scss';\n\nimport users from './api/users';\nimport todos from './api/todos';\n\nlet todoWithUser = todos.map(todo => ({\n  ...todo,\n  user: users.find(user => user.id === todo.userId)?.name || null,\n}));\n\ntodoWithUser.sort((todo1, todo2) => todo1.id - todo2.id);\n\nconst firstMaxId = todos.sort((todo1, todo2) => todo2.id - todo1.id)[0].id;\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userForTodo, setUserForTodo] = useState('');\n  const [id, setId] = useState(firstMaxId + 1);\n  const [isInputEntered, setIsInputEntered] = useState(true);\n  const [isUserSelected, setIsUserSelected] = useState(true);\n\n  const noInputMessage = 'Please enter the title';\n  const noUserMessage = 'Please choose a user';\n\n  const createACard = () => {\n    const newCard = {\n      [id - 1]: {\n        id,\n        title: title.replace(/[^a-z\\d а-я]/ig, ''),\n        completed: false,\n        user: userForTodo,\n      },\n    };\n\n    todoWithUser = Object.assign(todoWithUser, newCard);\n\n    setId(state => state + 1);\n  };\n\n  const inputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\n  const selectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserForTodo(event.target.value);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    let cardWillBeCreated = true;\n\n    if (!title || !title.replace(/[^a-z\\d а-я]/ig, '').trim()) {\n      setIsInputEntered(false);\n      cardWillBeCreated = false;\n    } else {\n      setIsInputEntered(true);\n    }\n\n    if (!userForTodo) {\n      setIsUserSelected(false);\n      cardWillBeCreated = false;\n    } else {\n      setIsUserSelected(true);\n    }\n\n    if (cardWillBeCreated) {\n      createACard();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Add todo form</h1>\n\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <input\n          className=\"input\"\n          type=\"text\"\n          id=\"newTodo\"\n          name=\"newTodo\"\n          value={title}\n          placeholder=\"New todo\"\n          onChange={inputChange}\n          data-cy=\"titleInput\"\n        />\n        <span className=\"message\">{!isInputEntered && (noInputMessage)}</span>\n\n        <div className=\"select\">\n          <select\n            className=\"select__element\"\n            name=\"users\"\n            onChange={selectChange}\n            data-cy=\"userSelect\"\n          >\n            <option\n              value=\"\"\n              disabled\n              selected\n            >\n              Choose a user\n            </option>\n            {users.map(user => (\n              <option value={user.name}>{user.name}</option>\n            ))}\n          </select>\n        </div>\n\n        <span className=\"message\">{!isUserSelected && (noUserMessage)}</span>\n        <button className=\"button\" type=\"submit\">Add a new todo</button>\n      </form>\n\n      <TodoList todoWithUser={todoWithUser} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}